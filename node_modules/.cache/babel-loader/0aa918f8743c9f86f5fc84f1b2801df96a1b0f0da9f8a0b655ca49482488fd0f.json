{"ast":null,"code":"import { mapActions, mapGetters } from \"vuex\";\nimport AddCategory from \"@/components/AddCategory.vue\";\nimport ModalCategorie from \"./ModalCategorie.vue\";\nimport PostComponent from \"./PostComponent.vue\";\nimport AddPost from \"./AddPost.vue\";\nexport default {\n  name: \"ListView\",\n  components: {\n    AddCategory,\n    ModalCategorie,\n    PostComponent,\n    AddPost\n  },\n  computed: {\n    ...mapGetters(\"cate\", [\"allcate\"])\n  },\n  data: function () {\n    return {\n      post: [],\n      menu: false,\n      model: {\n        title: \"\",\n        description: \"\"\n      }\n    };\n  },\n  methods: {\n    ...mapActions(\"cate\", [\"getCat\"]),\n    /*startDrag(evt, post) {\n      evt.dataTransfer.dropEffect = \"move\";\n      evt.dataTransfer.effectAllowed = \"move\";\n      evt.dataTransfer.setData(\"itemID\", post.id);\n    },*/\n    onDrop(event, id) {\n      let ids = event.dataTransfert.getData(\"text\");\n      console.log(ids + \" \" + id);\n      // const postID = evt.dataTransfer.getData(\"itemID\");\n      // const post = this.posts.value.find((post) => post.id == postID);\n      // post.list = list;\n    }\n  },\n  created() {\n    this.$store.dispatch(\"cate/getCat\");\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","AddCategory","ModalCategorie","PostComponent","AddPost","name","components","computed","data","post","menu","model","title","description","methods","onDrop","event","id","ids","dataTransfert","getData","console","log","created","$store","dispatch"],"sources":["/home/florentin/trello/my-vue-project/src/components/ListView.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <div class=\"flex about space-x-2 overflow-x-auto pl-20 pt-10 h-screen\">\n      <div v-for=\"cat in allcate\" v-bind:key=\"cat.id\">\n        <div\n          class=\"drop-zone flex justify-between mb-4 w-[250px]\"\n          @dragenter.prevent\n          @dragover.prevent\n          @drop=\"onDrop($event, cat.id)\"\n        >\n          <div\n            class=\"text-slate-800 text-sm font-bold bg-yellow-500 p-1 rounded-md\"\n          >\n            <div class=\"rounded-sm text-[18px] hover:cursor-pointer\">\n              {{ cat.name }}\n            </div>\n          </div>\n          <div class=\"flex space-x-5\">\n            <p>{{ cat.count }}</p>\n            <ModalCategorie :id=\"cat.id\" />\n          </div>\n        </div>\n        <PostComponent :id=\"cat.id\" />\n        <AddPost :id=\"cat.id\" />\n      </div>\n      <AddCategory />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport AddCategory from \"@/components/AddCategory.vue\";\nimport ModalCategorie from \"./ModalCategorie.vue\";\nimport PostComponent from \"./PostComponent.vue\";\nimport AddPost from \"./AddPost.vue\";\n\nexport default {\n  name: \"ListView\",\n  components: {\n    AddCategory,\n    ModalCategorie,\n    PostComponent,\n    AddPost,\n  },\n  computed: {\n    ...mapGetters(\"cate\", [\"allcate\"]),\n  },\n  data: function () {\n    return {\n      post: [],\n      menu: false,\n      model: {\n        title: \"\",\n        description: \"\",\n      },\n    };\n  },\n\n  methods: {\n    ...mapActions(\"cate\", [\"getCat\"]),\n    /*startDrag(evt, post) {\n      evt.dataTransfer.dropEffect = \"move\";\n      evt.dataTransfer.effectAllowed = \"move\";\n      evt.dataTransfer.setData(\"itemID\", post.id);\n    },*/\n    onDrop(event, id) {\n      let ids = event.dataTransfert.getData(\"text\");\n      console.log(ids + \" \" + id);\n      // const postID = evt.dataTransfer.getData(\"itemID\");\n      // const post = this.posts.value.find((post) => post.id == postID);\n      // post.list = list;\n    },\n  },\n  created() {\n    this.$store.dispatch(\"cate/getCat\");\n  },\n};\n</script>\n"],"mappings":"AA+BA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,cAAa,MAAO,sBAAsB;AACjD,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,OAAM,MAAO,eAAe;AAEnC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVL,WAAW;IACXC,cAAc;IACdC,aAAa;IACbC;EACF,CAAC;EACDG,QAAQ,EAAE;IACR,GAAGP,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC;EACnC,CAAC;EACDQ,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE;QACLC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,GAAGf,UAAU,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjC;;;;;IAKAgB,MAAMA,CAACC,KAAK,EAAEC,EAAE,EAAE;MAChB,IAAIC,GAAE,GAAIF,KAAK,CAACG,aAAa,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAACJ,GAAE,GAAI,GAAE,GAAID,EAAE,CAAC;MAC3B;MACA;MACA;IACF;EACF,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}